"""
This type stub file was generated by pyright.
"""

class LayoutSlice:
    args_first = ...
    def __init__(self, layout, key) -> None:
        ...
    
    def wrapped_object(self, LayoutClass, fields, *args, **kwargs): # -> Container | Fieldset | MultiField:
        """
        Returns a layout object of type `LayoutClass` with `args` and `kwargs` that
        wraps `fields` inside.
        """
        ...
    
    def pre_map(self, function): # -> None:
        """
        Iterates over layout objects pointed in `self.slice` executing `function` on them.
        It passes `function` penultimate layout object and the position where to find last one
        """
        ...
    
    def wrap(self, LayoutClass, *args, **kwargs): # -> None:
        """
        Wraps every layout object pointed in `self.slice` under a `LayoutClass` instance with
        `args` and `kwargs` passed.
        """
        ...
    
    def wrap_once(self, LayoutClass, *args, **kwargs): # -> None:
        """
        Wraps every layout object pointed in `self.slice` under a `LayoutClass` instance with
        `args` and `kwargs` passed, unless layout object's parent is already a subclass of
        `LayoutClass`.
        """
        ...
    
    def wrap_together(self, LayoutClass, *args, **kwargs): # -> None:
        """
        Wraps all layout objects pointed in `self.slice` together under a `LayoutClass`
        instance with `args` and `kwargs` passed.
        """
        ...
    
    def map(self, function): # -> None:
        """
        Iterates over layout objects pointed in `self.slice` executing `function` on them
        It passes `function` last layout object
        """
        ...
    
    def update_attributes(self, **original_kwargs): # -> None:
        """
        Updates attributes of every layout object pointed in `self.slice` using kwargs
        """
        ...
    


