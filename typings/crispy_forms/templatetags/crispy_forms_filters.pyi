"""
This type stub file was generated by pyright.
"""

from functools import lru_cache

@lru_cache()
def uni_formset_template(template_pack=...): # -> _BaseTemplate:
    ...

@lru_cache()
def uni_form_template(template_pack=...): # -> _BaseTemplate:
    ...

register = ...
@register.filter(name="crispy")
def as_crispy_form(form, template_pack=..., label_class=..., field_class=...): # -> SafeText | str:
    """
    The original and still very useful way to generate a div elegant form/formset::

        {% load crispy_forms_tags %}

        <form class="uniForm" method="post">
            {% csrf_token %}
            {{ myform|crispy }}
        </form>

    or, if you want to explicitly set the template pack::

        {{ myform|crispy:"bootstrap" }}

    In ``bootstrap3`` or ``bootstrap4`` for horizontal forms you can do::

        {{ myform|label_class:"col-lg-2",field_class:"col-lg-8" }}
    """
    ...

@register.filter(name="as_crispy_errors")
def as_crispy_errors(form, template_pack=...): # -> SafeText | str:
    """
    Renders only form errors the same way as django-crispy-forms::

        {% load crispy_forms_tags %}
        {{ form|as_crispy_errors }}

    or::

        {{ form|as_crispy_errors:"bootstrap" }}
    """
    ...

@register.filter(name="as_crispy_field")
def as_crispy_field(field, template_pack=..., label_class=..., field_class=...): # -> SafeText | str:
    """
    Renders a form field like a django-crispy-forms field::

        {% load crispy_forms_tags %}
        {{ form.field|as_crispy_field }}

    or::

        {{ form.field|as_crispy_field:"bootstrap" }}
    """
    ...

@register.filter(name="flatatt")
def flatatt_filter(attrs): # -> SafeText:
    ...

@register.filter
def optgroups(field):
    """
    A template filter to help rendering of fields with optgroups.

    Returns:
        A tuple of label, option, index

        label: Group label for grouped optgroups (`None` if inputs are not
               grouped).
        option: A dict containing information to render the option::
            {
                "name": "checkbox_select_multiple",
                "value": 1,
                "label": 1,
                "selected": False,
                "index": "0",
                "attrs": {"id": "id_checkbox_select_multiple_0"},
                "type": "checkbox",
                "template_name": "django/forms/widgets/checkbox_option.html",
                "wrap_label": True,
            }
        index: Group index`
    """
    ...

